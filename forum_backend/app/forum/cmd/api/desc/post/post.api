syntax = "v1"

info (
    version: "1.0.0"
    title: "帖子实例"
    description: "帖子实例相关的api请求与回复定义"
    author: "qiuqiu"
    email: "rhysqiuj@gmail.com"
)

import "../common/common.api"

type PostInfo {
    Id int64 `json:"id"`
    Title string `json:"title"`
    Content string `json:"content"`
    UserId int64 `json:"user_id"`
    CategoryId int64 `json:"category_id"`
    Status int64 `json:"status"`         
    IsTop int64 `json:"is_top"`          
    IsHot int64 `json:"is_hot"`
    CreatedTime int64 `json:"created_time"`
    UpdatedTime int64 `json:"updated_time"`
}

type (
    CreatePostReq {
        Title string `json:"title"`
        Content string `json:"content"`
        CategoryId int64 `json:"category_id,optional"`
    }

    CreatePostResp {
        BaseResp
        PostId int64 `json:"post_id"`
    }
)

type (
    GetPostReq {
        Id int64 `path:"id"`
    }

    GetPostResp {
        BaseResp
        Post PostInfo `json:"post"`
    }
)

type (
    ListPostReq {
        CategoryId int64 `form:"category_id"`
        UserId int64 `form:"user_id,optional"`
        Status int64 `form:"status,optional"`
        LastId int64 `form:"last_id"`
        Limit int64 `form:"limit"`
        OrderBy string `form:"order_by"`
        OrderType string `form:"order_type"`
    }

    ListPostResp {
        BaseResp
        Posts []PostInfo `json:"posts"`
        HasMore bool `json:"has_more"`
        LastId int64 `json:"last_id"`
    }
)

type (
    UpdatePostReq {
        Id int64 `path:"id"`
        Title string `json:"title,optional"`
        Content string `json:"content,optional"`
        CategoryId int64 `json:"category_id,optional"`
        Status int64 `json:"status,optional"`
    }

    UpdatePostResp {
        BaseResp
        PostId int64 `json:"post_id"`
    }

    DeletePostReq {
        Id int64 `path:"id"`
    }

    DeletePostResp {
        BaseResp
    }
)